"Function yang beroperasi pada function yang lain. Baik itu digunakan dalam argument, maupun sebagai return value."
- https://eloquentjavascript.net

First Class Function

"Javascript memperlakukan function sebagai object."
- sitepoint.com

function kerjakanTugas(mataKuliah, selesai) {
    console.log(`Mulai mengerjakan tugas ${mataKuliah}...`);
    selesai();
}

function selesai() {
    alert(`Selesai mengerjakan tugas!`);
}

kerjakanTugas(`Pemrograman Web`, selesai);

contoh Higher Order Function
setTimeout(function() {
    console.log('Hello World');
}, 1000)

const tombol = document.querySelector('.submit');
tombol.addEventListener('click', function() {
    console.log('tombol ditekan!');
})

function ucapkanSalam(waktu) {
    return function (nama) {
        console.log(`Halo ${nama}, Selamat ${waktu}, semoga harimu menyenangkan!`);
    }
}

let selamatMalam = ucapkanSalam('Malam');

console.dir(selamatMalam('Rafi'));

Kenapa?
Abstraksi
"Semakin besar sebuah program, semakin tinggi kompleksitasnya, semakin membingungkan programmernya."
- eloquentjavascript.net

"Ada dua cara untuk merancang sebuah software: Cara pertama adalah untuk membuat programnya se-sederhana mungkin sehingga jelas-jelas tidak ada kekurangannya, dan cara lainnya adalah untuk membuat programmnya se-kompleks mungkin sehingga tidak ada kekurangan yang jelas."
- C.A.R. Hoare, 1980 ACM Turing Award Lecture

let total = 0, count = 1;
while(count <= 10) {
    total += count;
    count += 1;
}
console.log(total);

vs.

console.log(sum(range(1,10)));

for (let i = 0; i < 10; i++) {
    console.log(i);
}

function repeatLog(n) {
    for (let i = 0; i< n; i++) {
        console.log(i);
    }
}
repeatLog(10);

function repeat(n, action) {
    for(let i = 0; i < n; i++) {
        action(i);
    }
}

repeat(10, console.log);
repeat(3, alert);

Functional Programming

Contoh Higher Order Function
Array.prototype.map()
Array.prototype.filter()
Array.prototype.reduce()